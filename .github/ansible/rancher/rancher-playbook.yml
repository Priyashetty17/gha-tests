---
- name: Deploy Rancher on RKE2 HA cluster
  hosts: localhost
  become: no
  gather_facts: false
  
  vars:
    rancher_helm_repo_default: "latest"
    rancher_helm_repo_final: "{{ rancher_helm_repo | default(rancher_helm_repo_default) }}"
    rancher_helm_url_default: "https://releases.rancher.com/server-charts/"
    rancher_helm_url_final: "{{ rancher_helm_url | default(rancher_helm_url_default) }}"
    rancher_helm_custom_name: "rancher-{{ rancher_helm_repo_final }}"
    rancher_helm_extra_settings: {}

  tasks:
    - name: Check if kubeconfig file exists
      ansible.builtin.stat:
        path: "{{ kubeconfig_file }}"
      register: kubeconfig_stat
    
    - name: Fail if kubeconfig file does not exist
      ansible.builtin.fail:
        msg: "Kubeconfig file not found at {{ kubeconfig_file }}"
      when: not kubeconfig_stat.stat.exists

    - name: Install cert-manager CRDs from official URL via kubectl
      ansible.builtin.shell: >
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.crds.yaml
      environment:
        KUBECONFIG: "{{ kubeconfig_file }}"

    - name: Add Jetstack Helm repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io
        state: present
      
    - name: Install cert-manager Helm chart
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        chart_version: "{{ cert_manager_version }}"
        release_namespace: cert-manager
        create_namespace: yes
        wait: yes
        values:
          installCRDs: false
      environment:
        KUBECONFIG: "{{ kubeconfig_file }}"

    - name: Add Rancher Helm repo
      kubernetes.core.helm_repository:
        kubeconfig: "{{ kubeconfig_file }}"
        name: "{{ rancher_helm_custom_name }}"
        repo_url: "{{ rancher_helm_url_final }}{{ rancher_helm_repo }}"
        state: present

    - name: Install Rancher 
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_file }}"
        name: rancher
        chart_ref: "{{ rancher_helm_custom_name }}/rancher"
        chart_version: "{{ rancher_version }}"
        release_namespace: cattle-system
        create_namespace: true
        wait: true
        wait_timeout: "600s"
        values: "{{ default_rancher_values | combine(rancher_helm_extra_settings, recursive=True) }}"
      vars:
        default_rancher_values:
          hostname: "{{ fqdn }}"
          rancherImageTag: "{{ rancher_image_tag | default(omit) }}"
          bootstrapPassword: "{{ bootstrap_password }}"
          ingress:
            tls:
              source: cert-manager
      retries: 5
      delay: 60

    - name: Wait for Rancher deployment
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_file }}"
        api_version: apps/v1
        kind: Deployment
        namespace: cattle-system
        name: rancher
      register: rancher_deployment
      until: rancher_deployment.resources[0].status.readyReplicas == rancher_deployment.resources[0].status.replicas
      retries: 20
      delay: 30

    - name: Wait for Rancher UI
      uri:
        url: "https://{{ fqdn }}"
        method: GET
        status_code: 200
        validate_certs: false
      register: webpage_result
      retries: 30
      delay: 5
      until: webpage_result.status == 200

    - name: Wait for rancher-webhook pod to be running
      ansible.builtin.shell: >
        kubectl -n cattle-system get po -l app=rancher-webhook | grep -q '1/1.*Running'
      environment:
        KUBECONFIG: "{{ kubeconfig_file }}"
      register: webhook_status
      until: webhook_status.rc == 0
      retries: 20
      delay: 15

    - name: Get Rancher Ingress Host
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_file }}"
        api_version: networking.k8s.io/v1
        kind: Ingress
        namespace: cattle-system
        name: rancher
      register: rancher_ingress

    - name: Display Rancher URL
      debug:
        msg: "Rancher URL: https://{{ rancher_ingress.resources[0].spec.rules[0].host }}"
      when: rancher_version != "" and rancher_ingress.resources|length > 0 and rancher_ingress.resources[0].spec.rules|length > 0 and rancher_ingress.resources[0].spec.rules[0].host is defined

    - name: Get Rancher UserID and Token
      ansible.builtin.uri:
        url: "https://{{ fqdn }}/v3-public/localproviders/local?action=login"
        body:
          username: admin
          password: "{{ bootstrap_password }}"
        method: POST
        force_basic_auth: true
        validate_certs: false
        status_code: 201
        body_format: json
      register: rancherjson

    - name: Extract Rancher UserID and Token
      set_fact:
        rancher_user_id: "{{ rancherjson.json.userId }}"
        API_KEY: "{{ rancherjson.json.token }}"

    - name: Set Rancher Server URL
      ansible.builtin.uri:
        url: "https://{{ fqdn }}/v3/settings/server-url"
        method: PUT
        headers:
          Accept: "application/json"
          Content-Type: "application/json"
          Authorization: "Bearer {{ API_KEY }}"
        body: 
          name: "server-url"
          value: "https://{{ fqdn }}"
        body_format: json
        force_basic_auth: true
        validate_certs: false
        status_code: 200
    
    - name: Print Token
      debug:
        msg: "RANCHER_API_KEY: {{ API_KEY }}"
